// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {


    ext {

        kotlin_version = '1.3.61'
        glide_version = '4.10.0'
        app_compat_version = '1.1.0'
        ktx_version = '1.1.0'
        constraint_version = '1.1.3'
        junit_version = '4.12'
        junit_ext_version = '1.1.1'
        expresso_ext_version = '3.2.0'
        coroutine_version = '1.3.2'
        nav_version = '2.1.0-rc01'
        legacy_version = '1.0.0'
        play_map_version = '17.0.0'
        play_map_utils_version = '0.5'
        dexter_version = '5.0.0'
        location_version = '17.0.0'
        lifecycle_version = '2.2.0-alpha03'
        retrofit_version = '2.8.1'
        gson_version = '2.8.6'
        room_version = "2.2.0-beta01"
        core_version = "1.1.0"
        dagger_version = "2.24"
        mockito_kotlin = '2.2.0'
        mockito_inline = '2.28.2'
        ok_http_version = '4.5.0'
        arch_test_version = '2.1.0'
        kotlin_coroutines_test = '1.3.5'
        test_rules = '1.1.0'
        okhttp_idling = '1.0.0'
        ui_automator_version = '2.2.0'



        mainApplication = [
                kotlin:         "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                glide:          "com.github.bumptech.glide:glide:$glide_version",
                glide_compiler: "com.github.bumptech.glide:compiler:$glide_version",
                coroutines:     "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version",
                coroutines_android:     "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version",
                play_map:       "com.google.android.gms:play-services-maps:$play_map_version",
                map_utils:       "com.google.maps.android:android-maps-utils:$play_map_utils_version",
                dexter:         "com.karumi:dexter:$dexter_version",
                location:       "com.google.android.gms:play-services-location:$location_version",
                retrofit:       "com.squareup.retrofit2:retrofit:$retrofit_version",
                retrofit_gson:  "com.squareup.retrofit2:converter-gson:$retrofit_version",
                gson:           "com.google.code.gson:gson:$gson_version",
                scalars:        "com.squareup.retrofit2:converter-scalars:$retrofit_version",
                dagger:        "com.google.dagger:dagger:$dagger_version",
                dagger_compiler:"com.google.dagger:dagger-compiler:$dagger_version",
                okhttp:         "com.squareup.okhttp3:okhttp:$ok_http_version"




        ]

        androidX = [
                appCompat:          "androidx.appcompat:appcompat:$app_compat_version",
                ktx:                "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                constraintlayout:   "androidx.constraintlayout:constraintlayout:$constraint_version",
                junit_test:         "androidx.test.ext:junit:$junit_ext_version",
                junit_ktx_test:     "androidx.test.ext:junit-ktx:$junit_ext_version",

                test_rules:         "androidx.test:rules:$test_rules",
                navigation_fragment:"androidx.navigation:navigation-fragment:$nav_version",
                navigation_ui:      "androidx.navigation:navigation-ui-ktx:$nav_version",
                legacy:             "androidx.legacy:legacy-support-v4:$legacy_version",
                viewmodel:          "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
                room:               "androidx.room:room-runtime:$room_version",
                room_compiler:      "androidx.room:room-compiler:$room_version",
                androidxCore:       "androidx.core:core-ktx:$core_version"


        ]

        test = [
                junit: "junit:junit:$junit_version",
                mockito_kotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin",
                mockito_inline: "org.mockito:mockito-inline:$mockito_inline",
                mockwebserver:  "com.squareup.okhttp3:mockwebserver:$ok_http_version",
                testShared : project(':testShared')
        ]

        androidTest = [
                archTest       : "androidx.arch.core:core-testing:$arch_test_version",
                coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_test",
                okhttp_idling:   "com.jakewharton.espresso:okhttp3-idling-resource:$okhttp_idling",
                ui_automator:    "androidx.test.uiautomator:uiautomator:$ui_automator_version",
                expresso:           "androidx.test.espresso:espresso-core:$expresso_ext_version",
                expresso_contrib:   "androidx.test.espresso:espresso-contrib:$expresso_ext_version",
                expresso_intents:   "androidx.test.espresso:espresso-intents:$expresso_ext_version"
                ]

    }
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
